module ML-SYNTAX
  meta-symbol #subst    [arity 3, substitution]
  meta-symbol bot 	    [arity 0]
  meta-symbol impl 	    [arity 2]
  meta-symbol exists 	[arity 2, binder 1 2]
  meta-symbol mu 	    [arity 2, set-binder 1 2, notNegative]

  notation not (X : SetVar) := impl X bot [folded]
  notation top :=
    not bot
    [folded]
  notation and X Y :=
    not (impl X (not Y))
    [folded]
  notation or X Y :=
    not (and (not X) (not Y))
    [folded]
  notation iff X Y :=
    not (and (impl X Y) (impl Y X))
    [folded]
  notation forall (x : Var) E :=
    not (exists x (not E))
    [folded, binder 1 2]
  notation nu (X : SetVar) E :=
    not (mu X (not (#subst E X (not X))))
    [folded, set-binder 1 2, notNegative]
endmodule