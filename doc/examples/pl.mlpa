module ML-PROPOSITIONAL-LOGIC
  imports ML-SYNTAX
  rule a1 P Q :=
    from []
    derive (impl (P (impl Q P)))
  rule a2 P Q R :=
    from []
    derive (impl (impl P (impl Q R)) (impl (impl P Q) (impl P R)))
  rule a3 P Q :=
    from []
    derive (impl (impl (not P) (impl Q)) (impl Q P))
  rule modus_ponens P Q :=
    from [P, (impl P Q)]
    derive Q

  lemma a2i P Q R :=
    from [impl (P (impl Q R))]
    derive (impl (impl P Q) (impl Q R))
  proof
    intros H1
    specialize (a2 P Q R) as H2
    apply (modus_ponens H1 H2)
  qed
  
  lemma mpd P Q R :=
    from [(impl P Q), (impl P (impl Q R))]
    derive (impl P R)
  proof
    intros H1 H2
    specialize (a2i _ _ _ H2) as H2'
    apply (modus_ponens _ _ H1 H2') as H3
    exact H3
  qed
endmodule